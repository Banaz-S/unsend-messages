{"version":3,"file":"static/js/921.bcbb771e.chunk.js","mappings":"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","sources":["assets/cards|sync|/^/.*/-canva/.svg$","assets/cards|sync|/^/.*/-flower/.svg$","assets/icons/go-back.svg","components/Create-Letter/Title.jsx","assets/icons/arrow-up.svg","assets/icons/arrow-down.svg","components/Create-Letter/ColorDropdown.jsx","components/Create-Letter/LetterPreview.jsx","components/Create-Letter/MentionDropdown.jsx","components/Create-Letter/BorderDropdown.jsx","assets/icons/loading-blue.svg","components/Create-Letter/ShareButton.jsx","components/Create-Letter/SubmissionTerm.jsx","pages/CreateLetterPage.jsx","assets/cards|sync|/^/.*/-.*/.svg$"],"sourcesContent":["var map = {\n\t\"./blue-canva.svg\": 656,\n\t\"./green-canva.svg\": 605,\n\t\"./grey-canva.svg\": 682,\n\t\"./peach-canva.svg\": 843,\n\t\"./pink-canva.svg\": 660,\n\t\"./purple-canva.svg\": 702\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 279;","var map = {\n\t\"./blue-flower.svg\": 122,\n\t\"./green-flower.svg\": 301,\n\t\"./grey-flower.svg\": 861,\n\t\"./peach-flower.svg\": 747,\n\t\"./pink-flower.svg\": 94,\n\t\"./purple-flower.svg\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 676;","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGoBack(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 46,\n    height: 47,\n    viewBox: \"0 0 46 47\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.86 13.159L8.51855 23.5005L18.86 33.842\",\n    stroke: \"#2B2B2B\",\n    strokeWidth: 1.91667,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.4812 23.5H8.80786\",\n    stroke: \"#2B2B2B\",\n    strokeWidth: 1.91667,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoBack);\nexport default __webpack_public_path__ + \"static/media/go-back.130504545f2d2ea735b18373cdae1b44.svg\";\nexport { ForwardRef as ReactComponent };","import \"./Title.css\";\r\nimport goBack from \"../../assets/icons/go-back.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction Title() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"create-letter\">\r\n      <div className=\"title\">\r\n        <img\r\n          className=\"go-back\"\r\n          src={goBack}\r\n          alt=\"\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => navigate(-1)}\r\n        />\r\n        <h3>Say What You Carry in Your Heart</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowUp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 32,\n    viewBox: \"0 0 33 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.71545 21.3966L14.4088 12.7033C15.4354 11.6766 17.1154 11.6766 18.1421 12.7033L26.8354 21.3966\",\n    stroke: \"#8F8F8F\",\n    strokeWidth: 3,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowUp);\nexport default __webpack_public_path__ + \"static/media/arrow-up.34997f2c55164d525a4368366d4f6e3b.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 32,\n    viewBox: \"0 0 33 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.8353 11.9333L18.142 20.6266C17.1153 21.6533 15.4353 21.6533 14.4087 20.6266L5.71533 11.9333\",\n    stroke: \"#8F8F8F\",\n    strokeWidth: 3,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrow-down.3dcdd98fcef0b80f7a91bf5530597208.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\r\nimport \"./ColorDropdown.css\";\r\nimport arrowUp from \"../../assets/icons/arrow-up.svg\";\r\nimport arrowDown from \"../../assets/icons/arrow-down.svg\";\r\n\r\nconst COLORS = [\r\n  { name: \"pink\", label: \"Pink\" },\r\n  { name: \"blue\", label: \"Blue\" },\r\n  { name: \"peach\", label: \"Peach\" },\r\n  { name: \"grey\", label: \"Grey\" },\r\n  { name: \"purple\", label: \"Purple\" },\r\n  { name: \"green\", label: \"Green\" },\r\n];\r\n\r\nfunction ColorDropdown({ onColorChange, isOpen, onToggle }) {\r\n  const [selectedColor, setSelectedColor] = useState(\"grey\");\r\n\r\n  const handleColorClick = (colorName) => {\r\n    setSelectedColor(colorName);\r\n    onColorChange(colorName);\r\n    onToggle(null); // Close the dropdown\r\n  };\r\n\r\n  const selected = COLORS.find((c) => c.name === selectedColor);\r\n  const selectedLabel = selected?.label || \"Grey\";\r\n\r\n  return (\r\n    <div className=\"custom-dropdown color-dropdown\">\r\n      <div className=\"dropdown-toggle\" onClick={onToggle}>\r\n        <div className=\"color-text-selected\">\r\n          <span className={`color-dot ${selectedColor}`}></span>\r\n          <span className=\"selected-text\">{selectedLabel}</span>\r\n        </div>\r\n        <span className=\"arrow\">\r\n          <img\r\n            className=\"change-arrow\"\r\n            src={isOpen ? arrowUp : arrowDown}\r\n            alt=\"Toggle Arrow\"\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          <p className=\"dropdown-title\">Colors</p>\r\n          <div className=\"color-options\">\r\n            {COLORS.map((color) => (\r\n              <div\r\n                key={color.name}\r\n                className={`color-option ${\r\n                  selectedColor === color.name ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => handleColorClick(color.name)}\r\n              >\r\n                <span className={`color-dot ${color.name}`}></span>\r\n                {color.label}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorDropdown;\r\n","import \"./LetterPreview.css\";\r\n\r\n// Canva imports\r\nimport pinkCanva from \"../../assets/cards/pink-canva.svg\";\r\nimport blueCanva from \"../../assets/cards/blue-canva.svg\";\r\nimport peachCanva from \"../../assets/cards/peach-canva.svg\";\r\nimport greyCanva from \"../../assets/cards/grey-canva.svg\";\r\nimport greenCanva from \"../../assets/cards/green-canva.svg\";\r\nimport purpleCanva from \"../../assets/cards/purple-canva.svg\";\r\n\r\n// Flower imports\r\nimport pinkFlower from \"../../assets/cards/pink-flower.svg\";\r\nimport blueFlower from \"../../assets/cards/blue-flower.svg\";\r\nimport peachFlower from \"../../assets/cards/peach-flower.svg\";\r\nimport greyFlower from \"../../assets/cards/grey-flower.svg\";\r\nimport greenFlower from \"../../assets/cards/green-flower.svg\";\r\nimport purpleFlower from \"../../assets/cards/purple-flower.svg\";\r\n\r\n// Mapping object\r\nconst imageMap = {\r\n  \"pink-canva\": pinkCanva,\r\n  \"blue-canva\": blueCanva,\r\n  \"peach-canva\": peachCanva,\r\n  \"grey-canva\": greyCanva,\r\n  \"purple-canva\": purpleCanva,\r\n  \"green-canva\": greenCanva,\r\n  \"pink-flower\": pinkFlower,\r\n  \"blue-flower\": blueFlower,\r\n  \"peach-flower\": peachFlower,\r\n  \"grey-flower\": greyFlower,\r\n  \"purple-flower\": purpleFlower,\r\n  \"green-flower\": greenFlower,\r\n};\r\n\r\nfunction LetterPreview({ color, toMention, border, onTextChange }) {\r\n  const imageSrc = require(`../../assets/cards/${color}-${border}.svg`);\r\n\r\n  return (\r\n    <div className=\"letter-card\">\r\n      <div className=\"image-card\">\r\n        <img className=\"img-card\" src={imageSrc} alt=\"Card Image\" />\r\n        <textarea\r\n          className=\"card-textarea text\"\r\n          placeholder=\"Write here...\"\r\n          onChange={(e) => onTextChange(e.target.value)}\r\n        ></textarea>\r\n        <p className={`card-footer to ${color}s`}>To: {toMention}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LetterPreview;\r\n","import { useState } from \"react\";\r\nimport \"./MentionDropdown.css\";\r\nimport arrowUp from \"../../assets/icons/arrow-up.svg\";\r\nimport arrowDown from \"../../assets/icons/arrow-down.svg\";\r\n\r\nfunction MentionDropdown({ onMentionChange, isOpen, onToggle }) {\r\n  const [selectedMention, setSelectedMention] = useState(\"No Mention\");\r\n\r\n  const mentions = [\r\n    \"Me\",\r\n    \"A Friend\",\r\n    \"My Manager\",\r\n    \"Mom\",\r\n    \"Dad\",\r\n    \"Sister\",\r\n    \"Brother\",\r\n    \"Teacher\",\r\n    \"Stranger\",\r\n    \"No Mention\",\r\n  ];\r\n\r\n  const handleMentionClick = (mention) => {\r\n    setSelectedMention(mention);\r\n    onMentionChange(mention);\r\n    onToggle(null); // close dropdown\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-dropdown mention-list\">\r\n      <div className=\"dropdown-toggle\" onClick={onToggle}>\r\n        <span className=\"for-who\">{selectedMention}</span>\r\n        <span className=\"arrow\">\r\n          <img\r\n            className=\"change-arrow2\"\r\n            src={isOpen ? arrowUp : arrowDown}\r\n            alt=\"Toggle Arrow\"\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          <p className=\"dropdown-title\">For Whom</p>\r\n          <div className=\"who-options\">\r\n            {mentions.map((mention) => (\r\n              <div\r\n                key={mention}\r\n                className={`who-option ${\r\n                  selectedMention === mention ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => handleMentionClick(mention)}\r\n              >\r\n                {mention}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MentionDropdown;\r\n","import \"./BorderDropdown.css\";\r\nimport arrowDown from \"../../assets/icons/arrow-down.svg\";\r\nimport arrowUp from \"../../assets/icons/arrow-up.svg\";\r\n\r\nfunction BorderDropdown({\r\n  onBorderChange,\r\n  isOpen,\r\n  onToggle,\r\n  selectedColor,\r\n  selectedBorder = \"canva\", // default to 'canva'\r\n}) {\r\n  const handleBorderClick = (borderType) => {\r\n    onBorderChange(borderType);\r\n    onToggle(null);\r\n  };\r\n\r\n  // Dynamic paths for previews\r\n  const card1 = require(`../../assets/cards/${selectedColor}-canva.svg`);\r\n  const card2 = require(`../../assets/cards/${selectedColor}-flower.svg`);\r\n\r\n  const borderLabelMap = {\r\n    canva: \"Calm Canvas\",\r\n    flower: \"Flowered Border\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-dropdown border-style\">\r\n      <div className=\"dropdown-toggle\" onClick={onToggle}>\r\n        <span className=\"selected-border selected-card\">\r\n          {borderLabelMap[selectedBorder]}\r\n        </span>\r\n        <span className=\"arrow\">\r\n          <img\r\n            className=\"change-arrow3\"\r\n            src={isOpen ? arrowUp : arrowDown}\r\n            alt=\"\"\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          <p className=\"dropdown-title\">Border Style</p>\r\n          <div className=\"border-options\">\r\n            <div\r\n              className=\"border-option\"\r\n              onClick={() => handleBorderClick(\"canva\")}\r\n            >\r\n              Calm Canvas\r\n            </div>\r\n            <div\r\n              className=\"border-option\"\r\n              onClick={() => handleBorderClick(\"flower\")}\r\n            >\r\n              Flowered Border\r\n            </div>\r\n          </div>\r\n          <div className=\"card-borders\">\r\n            <img className=\"card1\" src={card1} alt=\"Canvas Preview\" />\r\n            <img className=\"card2\" src={card2} alt=\"Flower Preview\" />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BorderDropdown;\r\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLoadingBlue(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 33,\n    viewBox: \"0 0 33 33\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.8332 16.2264C29.8332 23.5902 23.8636 29.5598 16.4998 29.5598C9.13604 29.5598 3.1665 23.5902 3.1665 16.2264C3.1665 8.86263 9.13604 2.8931 16.4998 2.8931C23.8636 2.8931 29.8332 8.86263 29.8332 16.2264ZM5.83317 16.2264C5.83317 22.1175 10.6088 26.8931 16.4998 26.8931C22.3909 26.8931 27.1665 22.1175 27.1665 16.2264C27.1665 10.3354 22.3909 5.55976 16.4998 5.55976C10.6088 5.55976 5.83317 10.3354 5.83317 16.2264Z\",\n    fill: \"#2B2B2B\",\n    fillOpacity: 0.16\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.4998 4.22643C16.4998 3.49005 15.9014 2.88619 15.1687 2.9597C13.0019 3.1771 10.9141 3.92283 9.09223 5.14017C6.89958 6.60525 5.19061 8.68764 4.18144 11.124C3.17228 13.5603 2.90823 16.2412 3.4227 18.8276C3.93717 21.414 5.20705 23.7898 7.07175 25.6545C8.93645 27.5192 11.3122 28.7891 13.8986 29.3036C16.485 29.818 19.1659 29.554 21.6023 28.5448C24.0386 27.5357 26.121 25.8267 27.5861 23.634C28.8034 21.8122 29.5492 19.7243 29.7666 17.5576C29.8401 16.8249 29.2362 16.2264 28.4998 16.2264C27.7635 16.2264 27.1751 16.8257 27.0833 17.5563C26.8774 19.1947 26.293 20.7694 25.3688 22.1525C24.1968 23.9066 22.5309 25.2738 20.5818 26.0811C18.6327 26.8885 16.488 27.0997 14.4189 26.6881C12.3497 26.2766 10.4491 25.2607 8.95736 23.7689C7.4656 22.2771 6.4497 20.3765 6.03813 18.3074C5.62655 16.2383 5.83779 14.0936 6.64512 12.1445C7.45246 10.1954 8.81963 8.52949 10.5738 7.35742C11.9568 6.43327 13.5315 5.84887 15.1699 5.64298C15.9006 5.55117 16.4998 4.96281 16.4998 4.22643Z\",\n    fill: \"#454545\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoadingBlue);\nexport default __webpack_public_path__ + \"static/media/loading-blue.fa70da079035cec2f4f31446fd9615bc.svg\";\nexport { ForwardRef as ReactComponent };","import \"./ShareButton.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport loadingIcon from \"../../assets/icons/loading-blue.svg\";\r\n\r\nfunction ShareButton({\r\n  letterText,\r\n  selectedColor,\r\n  selectedBorder,\r\n  selectedMention,\r\n  isChecked,\r\n}) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const isButtonDisabled = !letterText.trim() || !isChecked;\r\n\r\n  const handleClick = () => {\r\n    if (isButtonDisabled || isLoading) return;\r\n\r\n    const newLetter = {\r\n      id: Date.now(),\r\n      text: letterText,\r\n      color: selectedColor,\r\n      border: selectedBorder,\r\n      mention: selectedMention,\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n\r\n    const existing = JSON.parse(localStorage.getItem(\"sharedLetters\")) || [];\r\n    localStorage.setItem(\r\n      \"sharedLetters\",\r\n      JSON.stringify([newLetter, ...existing])\r\n    );\r\n\r\n    setIsLoading(true);\r\n\r\n    setTimeout(() => {\r\n      navigate(\"/\"); // Go to homepage\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"share-btn-container\"\r\n      onMouseEnter={() => setShowTooltip(isButtonDisabled)}\r\n      onMouseLeave={() => setShowTooltip(false)}\r\n    >\r\n      <button\r\n        className={`write-letter-btn post-letter ${\r\n          isButtonDisabled ? \"disabled\" : \"enabled\"\r\n        }`}\r\n        onClick={handleClick}\r\n        disabled={isButtonDisabled || isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <img src={loadingIcon} alt=\"Loading...\" className=\"loading-icon\" />\r\n        ) : (\r\n          \"Share Your Letter\"\r\n        )}\r\n      </button>\r\n\r\n      {showTooltip && !isLoading && (\r\n        <p className=\"tooltip-msg\">\r\n          Please write the letter and agree to the terms\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShareButton;\r\n","import \"./SubmissionTerm.css\";\r\n\r\n/* User Submission */\r\nfunction SubmissionTerm({ checked, onChange }) {\r\n  return (\r\n    <div className=\"submit\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n      />\r\n      <p>\r\n        <span>I agree that my letter </span> will be shared for 7 days.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmissionTerm;\r\n","import \"./CreateLetterPage.css\";\r\nimport Title from \"../components/Create-Letter/Title\";\r\nimport ColorDropdown from \"../components/Create-Letter/ColorDropdown\";\r\nimport LetterPreview from \"../components/Create-Letter/LetterPreview\";\r\nimport MentionDropdown from \"../components/Create-Letter/MentionDropdown\";\r\nimport BorderDropdown from \"../components/Create-Letter/BorderDropdown\";\r\nimport ShareButton from \"../components/Create-Letter/ShareButton\";\r\nimport SubmissionTerm from \"../components/Create-Letter/SubmissionTerm\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction CreateLetterPage() {\r\n  const [selectedColor, setSelectedColor] = useState(\"grey\");\r\n  const [selectedMention, setSelectedMention] = useState(\"No Mention\");\r\n  const [selectedBorder, setSelectedBorder] = useState(\"canva\");\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [letterText, setLetterText] = useState(\"\");\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  // ===== Close dropdowns =====\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (!e.target.closest(\".custom-dropdown\")) {\r\n        setOpenDropdown(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Title />\r\n      <div className=\"right\">\r\n        <ColorDropdown\r\n          onColorChange={setSelectedColor}\r\n          isOpen={openDropdown === \"color\"}\r\n          onToggle={() =>\r\n            setOpenDropdown((prev) => (prev === \"color\" ? null : \"color\"))\r\n          }\r\n        />\r\n        <MentionDropdown\r\n          onMentionChange={setSelectedMention}\r\n          isOpen={openDropdown === \"mention\"}\r\n          onToggle={() =>\r\n            setOpenDropdown((prev) => (prev === \"mention\" ? null : \"mention\"))\r\n          }\r\n        />\r\n        <BorderDropdown\r\n          onBorderChange={setSelectedBorder}\r\n          isOpen={openDropdown === \"border\"}\r\n          onToggle={() =>\r\n            setOpenDropdown((prev) => (prev === \"border\" ? null : \"border\"))\r\n          }\r\n          selectedColor={selectedColor}\r\n          selectedBorder={selectedBorder}\r\n        />\r\n\r\n        <ShareButton\r\n          letterText={letterText}\r\n          selectedColor={selectedColor}\r\n          selectedBorder={selectedBorder}\r\n          selectedMention={selectedMention}\r\n          isChecked={isChecked}\r\n        />\r\n\r\n        <SubmissionTerm\r\n          checked={isChecked}\r\n          onChange={() => setIsChecked((prev) => !prev)}\r\n        />\r\n      </div>\r\n\r\n      <LetterPreview\r\n        color={selectedColor}\r\n        toMention={selectedMention}\r\n        border={selectedBorder}\r\n        onTextChange={setLetterText}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default CreateLetterPage;\r\n","var map = {\n\t\"./blue-canva.svg\": 656,\n\t\"./blue-flower.svg\": 122,\n\t\"./green-canva.svg\": 605,\n\t\"./green-flower.svg\": 301,\n\t\"./grey-canva.svg\": 682,\n\t\"./grey-flower.svg\": 861,\n\t\"./peach-canva.svg\": 843,\n\t\"./peach-flower.svg\": 747,\n\t\"./pink-canva.svg\": 660,\n\t\"./pink-flower.svg\": 94,\n\t\"./purple-canva.svg\": 702,\n\t\"./purple-flower.svg\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 931;"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","navigate","useNavigate","_jsx","className","children","_jsxs","src","goBack","alt","style","cursor","onClick","COLORS","name","label","_ref","onColorChange","isOpen","onToggle","selectedColor","setSelectedColor","useState","selected","find","c","selectedLabel","arrowUp","arrowDown","color","handleColorClick","colorName","pinkCanva","blueCanva","peachCanva","greyCanva","purpleCanva","greenCanva","pinkFlower","blueFlower","peachFlower","greyFlower","purpleFlower","greenFlower","toMention","border","onTextChange","imageSrc","require","placeholder","onChange","target","value","onMentionChange","selectedMention","setSelectedMention","mention","handleMentionClick","onBorderChange","selectedBorder","handleBorderClick","borderType","card1","card2","canva","flower","letterText","isChecked","isLoading","setIsLoading","showTooltip","setShowTooltip","isButtonDisabled","trim","onMouseEnter","onMouseLeave","handleClick","newLetter","Date","now","text","createdAt","toISOString","existing","JSON","parse","localStorage","getItem","setItem","stringify","setTimeout","disabled","loadingIcon","checked","type","setSelectedBorder","openDropdown","setOpenDropdown","setLetterText","setIsChecked","useEffect","handleClickOutside","closest","document","addEventListener","removeEventListener","Title","ColorDropdown","prev","MentionDropdown","BorderDropdown","ShareButton","SubmissionTerm","LetterPreview"],"sourceRoot":""}